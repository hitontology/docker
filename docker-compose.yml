# HITO-Toolset, Maintainer: Konrad Höffner <konrad.hoeffner@imise.uni-leipzig.de>, originally Sebastian Stäubert  <sebastian.staeubert@imise.uni-leipzig.de>

services:

  ontology: 
    build: ./ontology
    volumes:
      - rdf:/ontology/dist:ro

  # Access at http://localhost:8102/sparql
  virtuoso:
    image: openlink/virtuoso-opensource-7
    environment:
      - DBA_PASSWORD=${DBA_PASSWORD}
      - VIRT_DATABASE_ERRORLOGLEVEL=3
      - VIRT_PARAMETERS_NUMBEROFBUFFERS=${VIRT_PARAMETERS_NUMBEROFBUFFERS}
      - VIRT_PARAMETERS_MAXDIRTYBUFFERS=${VIRT_PARAMETERS_MAXDIRTYBUFFERS}
      - VIRT_HTTPSERVER_SERVERPORT=8890
      - VIRT_SPARQL_DEFAULTGRAPH=http://hitontology.eu/ontology
      - VIRT_SPARQL_RESULTSETMAXROWS=50000
      - VIRT_SPARQL_MAXQUERYCOSTESTIMATIONTIME=400
      - VIRT_SPARQL_MAXQUERYEXECUTIONTIME=120
      - VIRT_SPARQL_DEFAULTQUERY=select distinct * {?s a hito:SoftwareProduct.} LIMIT 100
      - VIRT_PARAMETERS_DIRSALLOWED=., /usr/local/virtuoso-opensource/share/virtuoso/vad, /rdf
      - VIRT_PLUGINS_-=-
    volumes:
      - rdf:/rdf:ro
      - ./virtuoso:/opt/virtuoso-opensource/initdb.d:ro
    ports:
      - "127.0.0.1:8102:8890"
      - "127.0.0.1:8103:1111"
    restart: unless-stopped

  # Access at http://localhost:8104/ontology
  rickview:
    image: ghcr.io/konradhoeffner/rickview:master
    environment:
      - RICKVIEW_KB_FILE=/rdf/hito.ttl
      - RICKVIEW_BASE=/ontology
      - RICKVIEW_TITLE=HITO
      - RICKVIEW_SUBTITLE=Health IT Ontology
      - RICKVIEW_PREFIX=hito
      - RICKVIEW_NAMESPACE=http://hitontology.eu/ontology/
      - RICKVIEW_EXAMPLES=Study SoftwareProduct ApplicationSystemTypeCatalogue
      - RICKVIEW_HOMEPAGE=https://hitontology.eu
      - RICKVIEW_ENDPOINT=https://hitontology.eu/sparql
      - RICKVIEW_GITHUB=https://github.com/hitontology/ontology
      - RICKVIEW_DOC=https://hitontology.github.io/ontology/index-en.html
    volumes:
      - rdf:/rdf:ro
    ports:
      - "127.0.0.1:8104:8080"
    depends_on:
      - ontology
    restart: unless-stopped

  sparqltosql:
    build: ./database
    volumes:
      - rdf:/rdf:ro
      - sql:/sql
    depends_on:
      ontology: 
        condition: service_completed_successfully
    command: ["python", "download.py"]
    profiles: ["database"]

  postgresql:
    image: postgres:14
    restart: unless-stopped
    ports:
      - "127.0.0.1:55432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - sql:/docker-entrypoint-initdb.d
    depends_on:
      sparqltosql:
        condition: service_completed_successfully
    profiles: ["database"]

  phppgadmin:
    image: bitnami/phppgadmin:latest
    ports:
      - "127.0.0.1:8111:8080"
    depends_on:
      - postgresql
    profiles: ["database"]
  
  database-frontend:
    restart: unless-stopped
    build: ./database-frontend
    depends_on:
      - postgresql
    ports:
      - "127.0.0.1:8112:5000"
    environment:
      - HITO_DATABASE_HOST=postgresql
      - HITO_DATABASE_PORT=5432
      - HITO_DATABASE_PASSWORD=${POSTGRESQL_PASSWORD}
      - HITO_DATABASE_NAME=postgres
      - HITO_DATABASE_FRONTEND_REVERSE_PROXY_PATH=/database-frontend
    profiles: ["database"]

  proxy:
    image: caddy:2-alpine
    profiles: ["proxy"]
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "127.0.0.1:80:80"

volumes:
  rdf:
  postgres-data:
  sql:
